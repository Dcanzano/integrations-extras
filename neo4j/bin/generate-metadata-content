#!/usr/bin/env python3.7

import csv
import sys

from datadog_checks.neo4j import NAMESPACE, Neo4jCheck


def _main():
    nbr_of_args = len(sys.argv) - 1
    if nbr_of_args != 1:
        print("ERROR: invalid number of args, expected 1 but {} was passed", nbr_of_args)
        exit(1)
    metadata_file = sys.argv[1]

    whitelisted_metrics = Neo4jCheck.get_whitelisted_metrics()
    metrics_info = _get_metrics_info()

    with open(metadata_file, mode='w') as csv_file:
        fieldnames = [
            'metric_name', 'metric_type', 'interval', 'unit_name', 'per_unit_name',
            'description', 'orientation', 'integration', 'short_name',
        ]

        writer = csv.DictWriter(csv_file, fieldnames=fieldnames)
        writer.writeheader()

        for metric in whitelisted_metrics.keys():
            info = metrics_info.get(metric)
            if not info:
                print('ERROR: missing info for metric: {}'.format(metric))
                exit(1)
            if not info.description:
                print('WARNING: {} is missing description'.format(metric))
            writer.writerow(info.to_dict(namespace=NAMESPACE, metric_name=whitelisted_metrics[metric]))
        print('Done. Data written to file: {}'.format(metadata_file))


class Info:
    def __init__(self, description: str, metric_type='gauge', interval='', unit_name='', per_unit_name='',
                 orientation=0):
        self.description = description
        self.metric_type = metric_type
        self.interval = interval
        self.unit_name = unit_name
        self.per_unit_name = per_unit_name
        self.orientation = orientation

    def to_dict(self, namespace: str, metric_name: str):
        short_name = metric_name.replace('_', ' ').replace('.', ' ')
        return dict(
            metric_name='{}.{}'.format(namespace, metric_name), metric_type=self.metric_type,
            interval=self.interval, unit_name=self.unit_name, per_unit_name=self.per_unit_name,
            description=self.description, orientation=self.orientation, integration='neo4j',
            short_name=short_name,
        )


def _get_metrics_info():
    return {
        # bolt metrics
        'bolt_accumulated_processing_time_total': Info(
            description='The accumulated time worker threads have spent processing messages.',
        ),
        'bolt_accumulated_queue_time_total': Info(
            description='The accumulated time messages have spent waiting for a worker thread.',
        ),
        'bolt_connections_closed_total': Info(
            description=('The total number of Bolt connections closed since this instance started. '
                         'This includes both properly and abnormally ended connections'),
        ),
        'bolt_connections_idle': Info(
            description='The total number of Bolt connections sitting idle',
        ),
        'bolt_connections_opened_total': Info(
            description=('The total number of Bolt connections opened since this instance started. '
                         'This includes both succeeded and failed connections'),
        ),
        'bolt_connections_running': Info(
            description='The total number of Bolt connections currently being executed',
        ),
        'bolt_messages_done_total': Info(
            description=('The total number of messages that completed processing since this instance started. '
                         'This includes successful and failed and ignored Bolt messages'),
        ),
        'bolt_messages_failed_total': Info(
            description='The total number of messages that failed processing since this instance started',
        ),
        'bolt_messages_received_total': Info(
            description='The total number of messages received via Bolt since this instance started',
        ),
        'bolt_messages_started_total': Info(
            description=('The total number of messages that began processing since this instance started. '
                         'This is different from messages received in that this counter tracks how many of '
                         'the received messages have been taken on by a worker thread'),
        ),
        'bolt_sessions_started_total': Info(
            description=('The total number of Bolt sessions started since this instance started. '
                         'This includes both succeeded and failed sessions '
                         '(deprecated. use connections_opened instead).'),
        ),
        #
        # causal clustering metrics
        'causal_clustering_catchup_tx_pull_requests_received_total': Info(
            description='Total number of received transaction pull requests.'
        ),
        'causal_clustering_core_append_index': Info(
            description='Append index of the RAFT log.',
        ),
        'causal_clustering_core_commit_index': Info(
            description='Commit index of the RAFT log.',
        ),
        'causal_clustering_core_discovery_cluster_converged': Info(
            description='Discovery cluster convergence.',
        ),
        'causal_clustering_core_discovery_cluster_members': Info(
            description='Discovery cluster member size.',
        ),
        'causal_clustering_core_discovery_cluster_unreachable': Info(
            description='Discovery cluster unreachable size.',
        ),
        'causal_clustering_core_discovery_replicated_data_member_data_invisible': Info(
            description='Invisible data structure containing metadata about cluster mem,bers.'
        ),
        'causal_clustering_core_discovery_replicated_data_member_data_visible': Info(
            description='Visible data structure containing metadata about cluster mem,bers.'
        ),
        'causal_clustering_core_discovery_replicated_data_member_db_state_invisible': Info(
            description='The hidden part of the data structure used for internal purposes.',
        ),
        'causal_clustering_core_discovery_replicated_data_member_db_state_visible': Info(
            description='The visible part of the data structure used for internal purpose,s.'
        ),
        'causal_clustering_core_discovery_replicated_data_per_db_leader_name_invisible': Info(
            description='The total number of leadership changes.',
        ),
        'causal_clustering_core_discovery_replicated_data_per_db_leader_name_visible': Info(
            description='Number of leaders in the cluster.',
        ),
        'causal_clustering_core_discovery_replicated_data_raft_id_published_by_member_invisible': Info(
            description='Visible Raft ID published by member.',
        ),
        'causal_clustering_core_discovery_replicated_data_raft_id_published_by_member_visible': Info(
            description='Hidden Raft ID published by member.',
        ),
        'causal_clustering_core_discovery_replicated_data_cluster_id_per_db_name_invisible': Info(
            description='Hidden identifier for the cluster.',
        ),
        'causal_clustering_core_discovery_replicated_data_cluster_id_per_db_name_visible': Info(
            description='Shared identifier for the cluster.',
        ),
        'causal_clustering_core_in_flight_cache_element_count': Info(
            description='In-flight cache element count.',
        ),
        'causal_clustering_core_in_flight_cache_hits_total': Info(
            description='In-flight cache hits.',
        ),
        'causal_clustering_core_in_flight_cache_max_bytes': Info(
            description='In-flight cache max bytes.',
        ),
        'causal_clustering_core_in_flight_cache_max_elements': Info(
            description='In-flight cache maximum elements.',
        ),
        'causal_clustering_core_in_flight_cache_misses_total': Info(
            description='In-flight cache misses.',
        ),
        'causal_clustering_core_in_flight_cache_total_bytes': Info(
            description='In-flight cache total bytes.',
        ),
        'causal_clustering_core_is_leader': Info(
            description='Is this server the leader?',
        ),
        'causal_clustering_core_message_processing_delay': Info(
            description='Delay between RAFT message receive and process.',
        ),
        'causal_clustering_core_message_processing_timer': Info(
            description='Timer for RAFT message processing.',
            metric_type='histogram',
        ),
        'causal_clustering_core_message_processing_timer_append_entries_request': Info(
            description='Requests invoked by the RAFT leader to replicate log entries.',
            metric_type='histogram',
        ),
        'causal_clustering_core_message_processing_timer_append_entries_response': Info(
            description='Responses from followers to the RAFT leader\'s requests to replicate log entries.',
            metric_type='histogram',
        ),
        'causal_clustering_core_message_processing_timer_election_timeout': Info(
            description='Timeout events for processing of RAFT messages.',
            metric_type='histogram',
        ),
        'causal_clustering_core_message_processing_timer_heartbeat': Info(
            description='Heartbeat requests received by followers in the RAFT cluster.',
            metric_type='histogram',
        ),
        'causal_clustering_core_message_processing_timer_heartbeat_response': Info(
            description='Heartbeat responses received by the leader in the RAFT cluster.',
            metric_type='histogram',
        ),
        'causal_clustering_core_message_processing_timer_heartbeat_timeout': Info(
            description='Timeout events for heartbeat requests.',
            metric_type='histogram',
        ),
        'causal_clustering_core_message_processing_timer_log_compaction_info': Info(
            description='Log compaction',
            metric_type='histogram',
        ),
        'causal_clustering_core_message_processing_timer_new_batch_request': Info(
            description='New batch requests',
            metric_type='histogram',
        ),
        'causal_clustering_core_message_processing_timer_new_entry_request': Info(
            description='New entry requests',
            metric_type='histogram',
        ),
        'causal_clustering_core_message_processing_timer_pre_vote_request': Info(
            description='Pre vote requests',
            metric_type='histogram',
        ),
        'causal_clustering_core_message_processing_timer_pre_vote_response': Info(
            description='Pre vote responses',
            metric_type='histogram',
        ),
        'causal_clustering_core_message_processing_timer_prune_request': Info(
            description='Prune requests',
            metric_type='histogram',
        ),
        'causal_clustering_core_message_processing_timer_vote_request': Info(
            description='Vote requests',
            metric_type='histogram',
        ),
        'causal_clustering_core_message_processing_timer_vote_response': Info(
            description='Vote responses',
            metric_type='histogram',
        ),
        'causal_clustering_core_replication_attempt_total': Info(
            description='Raft replication attempt count.',
        ),
        'causal_clustering_core_replication_fail_total': Info(
            description='Raft Replication fail count.',
        ),
        'causal_clustering_core_replication_new_total': Info(
            description='Raft replication new request count.',
        ),
        'causal_clustering_core_replication_success_total': Info(
            description='Raft Replication success count.',
        ),
        'causal_clustering_core_term': Info(
            description='RAFT Term of this server',
        ),
        'causal_clustering_core_tx_retries_total': Info(
            description='Transaction retries.',
        ),
        #
        # database checkpointing metrics
        'check_point_events_total': Info(
            description='The total number of check point events executed so far.',
        ),
        'check_point_total_time_total': Info(
            description='The total time spent in check pointing so far.',
        ),
        'check_point_duration': Info(
            description='The duration of the last check point event.',
        ),
        #
        # cypher metrics
        'cypher_replan_events_total': Info(
            description='The total number of times Cypher has decided to re-plan a query.',
        ),
        'cypher_replan_wait_time_total': Info(
            description='The total number of seconds waited between query replans.',
        ),
        #
        # database data metrics
        'neo4j_count_node': Info(
            description='The total number of nodes.'
        ),
        'neo4j_count_relationship': Info(
            description='The total number of relationships.'
        ),
        'ids_in_use_node': Info(
            description='The total number of nodes stored in the database.',
        ),
        'ids_in_use_property': Info(
            description='The total number of different property names used in the database.',
        ),
        'ids_in_use_relationship': Info(
            description='The total number of relationships stored in the database.',
        ),
        'ids_in_use_relationship_type': Info(
            description='The total number of different relationship types stored in the database.',
        ),
        #
        # database transaction log metrics
        'log_appended_bytes_total': Info(
            description='The total number of bytes appended to transaction log.',
        ),
        'log_rotation_events_total': Info(
            description='The total number of transaction log rotations executed so far.',
        ),
        'log_rotation_total_time_total': Info(
            description='The total time spent in rotating transaction logs so far.',
        ),
        'log_rotation_duration': Info(
            description='The duration of the last log rotation event.',
        ),
        #
        # page cache metrics
        'page_cache_eviction_exceptions_total': Info(
            description='The total number of exceptions seen during the eviction process in the page cache.',
        ),
        'page_cache_evictions_total': Info(
            description='The total number of page evictions executed by the page cache.',
        ),
        'page_cache_flushes_total': Info(
            description='The total number of flushes executed by the page cache.',
        ),
        'page_cache_hits_total': Info(
            description='The total number of page hits happened in the page cache.',
        ),
        'page_cache_page_faults_total': Info(
            description='The total number of page faults happened in the page cache.',
        ),
        'page_cache_pins_total': Info(
            description='The total number of page pins executed by the page cache.',
        ),
        'page_cache_unpins_total': Info(
            description='The total number of page unpins executed by the page cache.',
        ),
        #
        # server metrics
        'server_threads_jetty_all': Info(
            description='The total number of threads (both idle and busy) in the jetty pool.',
        ),
        'server_threads_jetty_idle': Info(
            description='The total number of idle threads in the jetty pool.',
        ),
        #
        # transaction metrics
        'transaction_active': Info(
            description='The number of currently active transactions.',
        ),
        'transaction_active_read': Info(
            description='The number of currently active read transactions.',
        ),
        'transaction_active_write': Info(
            description='The number of currently active write transactions.',
        ),
        'transaction_committed_read_total': Info(
            description='The total number of committed transactions.',
        ),
        'transaction_committed_total': Info(
            description='The total number of committed read transactions.',
        ),
        'transaction_committed_write_total': Info(
            description='The total number of committed write transactions.',
        ),
        'transaction_last_closed_tx_id_total': Info(
            description='The ID of the last closed transaction.',
        ),
        'transaction_last_committed_tx_id_total': Info(
            description='The ID of the last committed transaction.',
        ),
        'transaction_peak_concurrent_total': Info(
            description='The highest peak of concurrent transactions.',
        ),
        'transaction_rollbacks_read_total': Info(
            description='The total number of rolled back read transactions.',
        ),
        'transaction_rollbacks_total': Info(
            description='The total number of rolled back transactions.',
        ),
        'transaction_rollbacks_write_total': Info(
            description='The total number of rolled back write transactions.',
        ),
        'transaction_started_total': Info(
            description='The total number of started transactions.',
        ),
        'transaction_terminated_read_total': Info(
            description='The total number of terminated read transactions.',
        ),
        'transaction_terminated_total': Info(
            description='The total number of terminated transactions.',
        ),
        'transaction_terminated_write_total': Info(
            description='The total number of terminated write transactions.',
        ),
        #
        # JVM GC metrics
        'vm_gc_count_g1_old_generation_total': Info(
            description='Total number of garbage collections for old generation.'
        ),
        'vm_gc_count_g1_young_generation_total': Info(
            description='Total number of garbage collections for young generation.'
        ),
        'vm_gc_time_g1_old_generation_total': Info(
            description='Accumulated garbage collection time in milliseconds for old generation.'
        ),
        'vm_gc_time_g1_young_generation_total': Info(
            description='Accumulated garbage collection time in milliseconds for young generation.'
        ),
        #
        # JVM memory buffers metrics
        'vm_memory_buffer_direct_capacity': Info(
            description='Estimated total capacity of direct buffers in the pool.',
        ),
        'vm_memory_buffer_direct_count': Info(
            description='Estimated number of direct buffers in the pool.',
        ),
        'vm_memory_buffer_direct_used': Info(
            description='Estimated amount of direct memory used by the pool.',
        ),
        'vm_memory_buffer_mapped_capacity': Info(
            description='Estimated total capacity of mapped buffers in the pool.',
        ),
        'vm_memory_buffer_mapped_count': Info(
            description='Estimated number of mapped buffers in the pool.',
        ),
        'vm_memory_buffer_mapped_used': Info(
            description='Estimated amount of mapped memory used by the pool.',
        ),
        #
        # JVM memory pools metrics
        'vm_memory_pool_compressed_class_space': Info(
            description='Estimated number of buffers in the compressed class space pool.',
        ),
        'vm_memory_pool_g1_eden_space': Info(
            description='Estimated number of buffers in the g1 eden space pool.',
        ),
        'vm_memory_pool_g1_old_gen': Info(
            description='Estimated number of buffers in the g1 old generation pool.',
        ),
        'vm_memory_pool_g1_survivor_space': Info(
            description='Estimated number of buffers in the g1 survivor space pool.',
        ),
        'vm_memory_pool_metaspace': Info(
            description='Estimated number of buffers in the metaspace pool.',
        ),
        #
        # JVM threads metrics
        'vm_thread_count': Info(
            description='Estimated number of active threads in the current thread group.',
        ),
        'vm_thread_total': Info(
            description='The total number of live threads including daemon and non-daemon threads.',
        ),
    }


if __name__ == "__main__":
    _main()
